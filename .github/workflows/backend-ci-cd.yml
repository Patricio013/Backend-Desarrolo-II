name: backend-ci-cd

on:
  push:
    branches: [ "main", "devops" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
  ECS_SERVICE: ${{ secrets.ECS_SERVICE }}
  CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build with Maven
        if: hashFiles('pom.xml') != ''
        run: mvn -B -DskipTests package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          IMAGE_URI=${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}
          GIT_TAG=${{ github.sha }}
          docker build -t $IMAGE_URI:$GIT_TAG -t $IMAGE_URI:latest .
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_ENV

      - name: Push Docker image
        run: |
          docker push $IMAGE_URI:$GIT_TAG
          docker push $IMAGE_URI:latest

      - name: Force new deployment
        run: |
          aws ecs update-service \
            --cluster "$ECS_CLUSTER" \
            --service "$ECS_SERVICE" \
            --force-new-deployment \
            --output text

      - name: Wait for service stability
        run: |
          aws ecs wait services-stable \
            --cluster "$ECS_CLUSTER" \
            --services "$ECS_SERVICE"