name: CI - Backend JUnit + Cypress + k6

on:
  push:
    branches: [ main, master ]
  pull_request:

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  backend-tests:
    name: JUnit (Maven)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: ArreglaYaBackend
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      SPRING_PROFILES_ACTIVE: test
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/ArreglaYaBackend
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Maven test
        run: mvn -B -Dspring.profiles.active=${{ env.SPRING_PROFILES_ACTIVE }} clean test

      - name: Publicar resultados JUnit
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/target/surefire-reports/*.xml
            **/target/failsafe-reports/*.xml

      - name: Subir artefactos JUnit
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: junit-reports
          path: |
            **/target/surefire-reports/*
            **/target/failsafe-reports/*

      - name: Resumen rápido JUnit
        if: always()
        run: |
          echo "## ✅ JUnit Summary" >> $GITHUB_STEP_SUMMARY
          passed=$(grep -h "<testsuite " **/target/surefire-reports/*.xml | awk -F'"' '{for(i=1;i<=NF;i++){if($i~/tests=/){t=$(i+1)}; if($i~/failures=/){f=$(i+1)}; if($i~/errors=/){e=$(i+1)}; if($i~/skipped=/){s=$(i+1)}}; print t,f,e,s}' | awk '{T+=$1;F+=$2;E+=$3;S+=$4} END {print T,F,E,S}')
          T=$(echo $passed | awk '{print $1}'); F=$(echo $passed | awk '{print $2}'); E=$(echo $passed | awk '{print $3}'); S=$(echo $passed | awk '{print $4}')
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Total | Failures | Errors | Skipped |" >> $GITHUB_STEP_SUMMARY
          echo "|------:|---------:|------:|--------:|" >> $GITHUB_STEP_SUMMARY
          echo "| $T | $F | $E | $S |" >> $GITHUB_STEP_SUMMARY

  e2e-cypress:
    name: Cypress E2E
    runs-on: ubuntu-latest
    needs: backend-tests
    services:
      postgres:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: ArreglaYaBackend
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      SPRING_PROFILES_ACTIVE: test
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/ArreglaYaBackend
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      API_BASE: http://localhost:8080

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Boot backend (background)
        run: |
          nohup mvn -DskipTests -Dspring.profiles.active=${{ env.SPRING_PROFILES_ACTIVE }} spring-boot:run > backend.log 2>&1 &
          for i in {1..60}; do
            if curl -sf $API_BASE/actuator/health > /dev/null; then echo "Backend UP"; break; fi
            sleep 2
          done
          curl -s $API_BASE/actuator/health || (echo "Backend no inició" && cat backend.log && exit 1)

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            frontend/package-lock.json

      - name: Install deps (frontend)
        working-directory: frontend
        run: npm ci

      - name: Run Cypress (reporter JUnit)
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          command: |
            npx cypress run \
              --reporter junit \
              --reporter-options "mochaFile=results/junit-[hash].xml,toConsole=true"
        env:
          CYPRESS_API_BASE: ${{ env.API_BASE }}

      - name: Subir artefactos Cypress
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-reports
          path: |
            frontend/results/*.xml
            frontend/cypress/screenshots/**/*
            frontend/cypress/videos/**/*

      - name: Resumen Cypress
        if: always()
        run: |
          echo "## 🌐 Cypress Summary" >> $GITHUB_STEP_SUMMARY
          tests=$(ls frontend/results/*.xml 2>/dev/null | wc -l)
          echo "- Archivos JUnit: $tests" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Artefactos subidos: cypress-reports_" >> $GITHUB_STEP_SUMMARY

  k6-load:
    name: k6 (smoke/stress/soak/spike)
    runs-on: ubuntu-latest
    needs: backend-tests
    services:
      postgres:
        image: postgres:15
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: ArreglaYaBackend
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      SPRING_PROFILES_ACTIVE: test
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/ArreglaYaBackend
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      API_BASE: http://localhost:8080

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Boot backend (background)
        run: |
          nohup mvn -DskipTests -Dspring.profiles.active=${{ env.SPRING_PROFILES_ACTIVE }} spring-boot:run > backend.log 2>&1 &
          for i in {1..60}; do
            if curl -sf $API_BASE/actuator/health > /dev/null; then echo "Backend UP"; break; fi
            sleep 2
          done
          curl -s $API_BASE/actuator/health || (echo "Backend no inició" && cat backend.log && exit 1)

      # ... scripts k6 idénticos a los que ya tenías ...

  all-done:
    name: Resumen general
    runs-on: ubuntu-latest
    needs: [backend-tests, e2e-cypress, k6-load]
    steps:
      - name: Resultado final
        run: |
          echo "## ✅ Pipeline" >> $GITHUB_STEP_SUMMARY
          echo "- JUnit, Cypress y k6 ejecutados." >> $GITHUB_STEP_SUMMARY
          echo "- Revisa los artefactos: \`junit-reports\`, \`cypress-reports\`, \`k6-summaries\`" >> $GITHUB_STEP_SUMMARY
